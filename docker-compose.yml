version: '3.8'

services:

  book-service-db:
    image: postgres:15
    container_name: "book-service-db"
    restart: always
    ports:
      - "5435:5435"
    environment:
      POSTGRES_USERNAME: "postgres"
      POSTGRES_PASSWORD: 148
      POSTGRES_DB: book
      PGDATA: "/var/lib/postgresql/data/pgdata"
      PGPORT: 5435
    volumes:
      - .:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres -d book" ]
      interval: 15s
      timeout: 10s
      retries: 7
      start_period: 12s

    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 4GB

  zookeeper:
    image: confluentinc/cp-zookeeper:7.0.1
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  broker:
    image: confluentinc/cp-kafka:7.0.1
    container_name: broker
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://broker:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1

  db-keycloak:
    image: postgres:15.4
    restart: unless-stopped
    ports:
      - '5432:5432'
    volumes:
      - D:/microservices-reader-notes/db:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: keypass
      PGDATA: /var/lib/postgresql/data
    healthcheck:
      test: "exit 0"
    networks:
      - keycloak-network

  keycloak:
    container_name: keycloak
    build: ./keycloak/
    restart: unless-stopped
    environment:
      KC_DB: postgres
      KC_DB_URL_HOST: db-keycloak
      KC_URL_DATABASE: keycloak
      KC_DB_PASSWORD: keypass
      KC_DB_USERNAME: keycloak
      KC_DB_SCHEMA: public
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
    entrypoint: /opt/keycloak/bin/kc.sh start-dev
    ports:
      - 8880:8080
      - 80:8443
    networks:
      - keycloak-network
    depends_on:
      db-keycloak:
        condition: service_healthy

  front-app:
    restart: always
    build:
      dockerfile: Dockerfile
      context: ./front-application/
    ports:
      - '8085:80'


networks:
  keycloak-network:
    driver: bridge