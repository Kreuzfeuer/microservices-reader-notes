spring:
  application:
    name: api-gateway
  cloud:
    gateway:
      routes:
        - id: book-service
          uri: lb://book-service/
          predicates:
            - Path=/api/v1/book-service/**
      default-filters: TokenRelay=

  security:
    oauth2:
      resourceserver:
        jwt:
          jwk-set-uri: http://localhost:8880/realms/microservice-reader-notes/protocol/openid-connect/certs
          issuer-uri: http://localhost:8880/realms/microservice-reader-notes
      client:
        provider:
          my-keycloak-provider:
            issuer-uri: http://localhost:8880/realms/microservice-reader-notes
            token-uri: http://localhost:8880/realms/microservice-reader-notes/protocol/openid-connect/token
            authorization-uri: http://localhost:8880/realms/microservice-reader-notes/protocol/openid-connect/auth
            user-info-uri: http://localhost:8880/realms/microservice-reader-notes/protocol/openid-connect/userinfo


        registration:
          spring-gateway-client:
            provider: my-keycloak-provider
            scope: openid
            client-id: spring-gateway-application
            client-secret: BzdSQto9KW1IFKP2gB2BkjhkKisu5P5O
            authorization-grant-type: authorization_code
            redirect-uri: "{baseUrl}/login/oauth2/code/keycloak"


eureka:
  client:
    serviceUrl:
      defaultZone: http://localhost:8761/eureka/
server:
  port: 8088
